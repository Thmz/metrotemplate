createAccordions = function(){
	$("div.metro-accordion").children("h3").each(function(){
			$(this).addClass("accordionTitle").next().addClass("accordionContent").hide();
			$(this).prepend("<img class='accordionArrow' src='themes/"+theme+"/img/primary/arrowRight.png'/>");
			
		});
		if(!$("div.metro-accordion").hasClass("no-memory")){
			for(var i = 1;i<$hashed.parts.length;i++){
				if($hashed.parts[i].substr(0,4) == "acc="){
					var t = $hashed.parts[i].substr(4).addSpaces();
					$("div.metro-accordion").children("h3").each(function(){
						if($(this).text().toLowerCase() == t){
							$(this).next().slideDown(500);
							if($.browser.name=="msie" && $.browser.version<9){
								$(this).children("img").attr("src","themes/"+theme+"/img/primary/arrowBottom.png")
							}else if($.layout.name == "webkit"){	
								r=89;
								$accordion.turnImageDown($(this).children("img"));
							}else{
								$(this).children("img").removeClass('right').addClass("down");
							}
							if(!$("div.metro-accordion").hasClass("no-scrollto")){
								
								setTimeout(function(el){
									var t=0;
									if(!scrollHeader){
										t = $("header").height()+30;
									}
									$("html,body").animate({scrollTop: $(el).offset().top-t},500)

								},500,this);
							}
							return false;
						}
					});
					break;
				}
			}
			setTimeout("$hashed.doRefresh = true",500);
		}
		$("#content, #panelContent").children("div.metro-accordion").on("click","h3",function(){
			var $c = $(this).next(),
				$d = $(this).parent();
			if($c.css("display") == "none"){
				if($d.hasClass("hide-others")){
					$d.children("div").stop().slideUp(500);
					$d.children("h3").children("img").attr("src","themes/"+theme+"/img/primary/arrowRight.png").removeClass('down').addClass("right");
					if($.layout.name == "webkit"){
						r=0;
						$accordion.turnImageRight($d.children("h3").children("img"));
					}
				}
				$c.stop().slideDown(500);
				if($.browser.name=="msie" && $.browser.version<9){
					$(this).children("img").attr("src","themes/"+theme+"/img/primary/arrowBottom.png")
				}else if($.layout.name == "webkit"){	
					r=0;
					$accordion.turnImageDown($(this).children("img"));
				}else{
					$(this).children("img").removeClass('right').addClass("down");
				}
				if(!$d.hasClass("no-scrollto")){
					var t=0;
					if(!scrollHeader){
						t = $("header").height()+30;
					}
					$("html,body").animate({scrollTop: $(this).offset().top-t},500);
				}
				if(!$d.hasClass("no-memory")){
					$hashed.doRefresh = false;
					for(var i = 1;i<$hashed.parts.length;i++){
						if($hashed.parts[i].substr(0,4) == "acc="){
							 $hashed.parts.splice(i,1);
							 window.location.hash = $hashed.parts.join("&");
							 break;
						}
					}
					window.location.hash += "&acc="+$(this).text().toLowerCase().stripSpaces(); 
					setTimeout("$hashed.doRefresh = true",500);
				}
			}else{
				$c.stop().slideUp(500);
				if($.browser.name=="msie" && $.browser.version<9){
					$(this).children("img").attr("src","themes/"+theme+"/img/primary/arrowRight.png")
				}else if($.layout.name == "webkit"){
					r=90;
					$accordion.turnImageRight($(this).children("img"));
				}else{
					$(this).children("img").removeClass('down').addClass("right");					
				}
				if(!$d.hasClass("no-memory")){
					$hashed.doRefresh = false;
					for(var i = 1;i<$hashed.parts.length;i++){
						if($hashed.parts[i].substr(0,4) == "acc="){
							 $hashed.parts.splice(i,1);
							 window.location.hash = $hashed.parts.join("&");
							 break;
						}
					}
					setTimeout("$hashed.doRefresh = true",500);
				}
			}
	});
}
$.plugin($beforeSubPageShow,{
	accordion:function(){
		createAccordions();
	}
});
$accordion={
	turnImageDown:function(img){
	    r+=9;
		$accordion.turn(img,r);
	    if(r<90){setTimeout(function(){$accordion.turnImageDown(img)},40)}else{setTimeout(function(){$accordion.turn(img,90)},40)}
	},
	turnImageRight: function(img){
	    r-=9;
	    $accordion.turn(img,r);
	    if(r>0){setTimeout(function(){$accordion.turnImageRight(img)},40)}else{setTimeout(function(){$accordion.turn(img,0)},40)}
	},
	turn:function(img,r){
	    img.css("transform","rotate("+r+"deg)").css("-webkit-transform","rotate("+r+"deg)")
	}
}
// Generated by CoffeeScript 1.4.0

/*
Lightbox v2 (Last modified on 2013-02-11 09:34:36)
by Lokesh Dhakar - http://www.lokeshdhakar.com
MODDED by Cain Wong (Auto-resize feature)

For more information, visit:
http://lokeshdhakar.com/projects/lightbox2/

Licensed under the Creative Commons Attribution 2.5 License - http://creativecommons.org/licenses/by/2.5/
- free for use in both personal and commercial projects
- attribution requires leaving author name, author link, and the license info intact
	
Thanks
- Scott Upton(uptonic.com), Peter-Paul Koch(quirksmode.com), and Thomas Fuchs(mir.aculo.us) for ideas, libs, and snippets.
- Artemy Tregubenko (arty.name) for cleanup and help in updating to latest proto-aculous in v2.05.


Table of Contents
=================
LightboxOptions

Lightbox
- constructor
- init
- enable
- build
- start
- changeImage
- sizeContainer
- showImage
- updateNav
- updateDetails
- preloadNeigbhoringImages
- enableKeyboardNav
- disableKeyboardNav
- keyboardAction
- end

options = new LightboxOptions
lightbox = new Lightbox options
*/

$(document).ready(function(){
(function() {
  var $, Lightbox, LightboxOptions;

  $ = jQuery;

  LightboxOptions = (function() {

    function LightboxOptions() {
      this.fileLoadingImage = 'plugins/lightbox/img/loading.gif';
      this.fileCloseImage = 'plugins/lightbox/img/close.png';
      this.resizeDuration = 700;
      this.fadeDuration = 500;
      this.labelImage = "Image";
      this.labelOf = "of";
    }

    return LightboxOptions;

  })();

  Lightbox = (function() {

    function Lightbox(options) {
      this.options = options;
      this.album = [];
      this.currentImageIndex = void 0;
      this.init();
    }

    Lightbox.prototype.init = function() {
      this.enable();
      return this.build();
    };

    Lightbox.prototype.enable = function() {
      var _this = this;
      return $('body').on('click', 'a[class*=lightbox], area[class*=lightbox]', function(e) {//return $('body').on('click', 'a[rel^=lightbox], area[rel^=lightbox]', function(e) {
        _this.start($(e.currentTarget));
        return false;
      });
    };

    Lightbox.prototype.build = function() {
      var $lightbox,
        _this = this;
      $("<div id='lightboxOverlay'></div><div id='lightbox'><div class='lb-outerContainer'><div class='lb-container'><img class='lb-image' src='' ><div class='lb-nav'><a class='lb-prev' href='' ></a><a class='lb-next' href='' ></a></div><div class='lb-loader'><a class='lb-cancel'><img src='" + this.options.fileLoadingImage + "'></a></div></div></div><div class='lb-dataContainer'><div class='lb-data'><div class='lb-details'><span class='lb-caption'>captioncaption</span><span class='lb-number'></span></div><div class='lb-closeContainer'><a class='lb-close'><img src='" + this.options.fileCloseImage + "'></a></div></div></div></div>").appendTo($('body'));
      $('#lightboxOverlay').hide().on('click', function(e) {
        _this.end();
        return false;
      });
      $lightbox = $('#lightbox');
      $lightbox.hide().on('click', function(e) {
        if ($(e.target).attr('id') === 'lightbox') {
          _this.end();
        }
        return false;
      });
      $lightbox.find('.lb-outerContainer').on('click', function(e) {
        if ($(e.target).attr('id') === 'lightbox') {
          _this.end();
        }
        return false;
      });
      $lightbox.find('.lb-prev').on('click', function(e) {
        _this.changeImage(_this.currentImageIndex - 1);
        return false;
      });
      $lightbox.find('.lb-next').on('click', function(e) {
        _this.changeImage(_this.currentImageIndex + 1);
        return false;
      });
      $lightbox.find('.lb-loader, .lb-close').on('click', function(e) {
        _this.end();
        return false;
      });
    };

    Lightbox.prototype.start = function($link) {
      var $lightbox, $window, a, i, imageNumber, left, top, _i, _len, _ref;
      $(window).on("resize", this.sizeOverlay);
      $('select, object, embed').css({
        visibility: "hidden"
      });
      $('#lightboxOverlay').width($(document).width()).height($(document).height()).fadeIn(this.options.fadeDuration);
      this.album = [];
      imageNumber = 0;
      if (($link.attr('class')).indexOf('lightbox') != -1) {//tutaj if ($link.attr('class') === 'lightbox') {
        this.album.push({
          link: $link.attr('href'),
          title: $link.attr('title')
        });
      } else {
        _ref = $($link.prop("tagName") + '[class="' + $link.attr('class') + '"]');
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          a = _ref[i];
          this.album.push({
            link: $(a).attr('href'),
            title: $(a).attr('title')
          });
          if ($(a).attr('href') === $link.attr('href')) {
            imageNumber = i;
          }
        }
      }
      $window = $(window);
      top = $window.scrollTop() + $window.height() / 10;
      left = $window.scrollLeft();
      $lightbox = $('#lightbox');
      $lightbox.css({
        top: top + 'px',
        left: left + 'px'
      }).fadeIn(this.options.fadeDuration);
      this.changeImage(imageNumber);
    };

    Lightbox.prototype.changeImage = function(imageNumber) {
      var $image, $lightbox, preloader,
        _this = this;
      this.disableKeyboardNav();
      $lightbox = $('#lightbox');
      $image = $lightbox.find('.lb-image');
      this.sizeOverlay();
      $('#lightboxOverlay').fadeIn(this.options.fadeDuration);
      $('.loader').fadeIn('slow');
      $lightbox.find('.lb-image, .lb-nav, .lb-prev, .lb-next, .lb-dataContainer, .lb-numbers, .lb-caption').hide();
      $lightbox.find('.lb-outerContainer').addClass('animating');
      preloader = new Image;
      preloader.onload = function() {
        $image.attr('src', _this.album[imageNumber].link);
        if (preloader.width > window.innerWidth * 0.9) {
          preloader.height = (window.innerWidth * 0.9 * preloader.height) / preloader.width;
          preloader.width = window.innerWidth * 0.9;
        }
        if (preloader.height > window.innerHeight * 0.8) {
          preloader.width = (window.innerHeight * 0.8 * preloader.width) / preloader.height;
          preloader.height = window.innerHeight * 0.8;
        }
        $image.width = preloader.width;
        $image.height = preloader.height;
        $image.attr('width', preloader.width + "px");
        return _this.sizeContainer(preloader.width, preloader.height);
      };
      preloader.src = this.album[imageNumber].link;
      this.currentImageIndex = imageNumber;
    };

    Lightbox.prototype.sizeOverlay = function() {
      return $('#lightboxOverlay').width($(document).width()).height($(document).height());
    };

    Lightbox.prototype.sizeContainer = function(imageWidth, imageHeight) {
      var $container, $lightbox, $outerContainer, containerBottomPadding, containerLeftPadding, containerRightPadding, containerTopPadding, newHeight, newWidth, oldHeight, oldWidth,
        _this = this;
      $lightbox = $('#lightbox');
      $outerContainer = $lightbox.find('.lb-outerContainer');
      oldWidth = $outerContainer.outerWidth();
      oldHeight = $outerContainer.outerHeight();
      $container = $lightbox.find('.lb-container');
      containerTopPadding = parseInt($container.css('padding-top'), 10);
      containerRightPadding = parseInt($container.css('padding-right'), 10);
      containerBottomPadding = parseInt($container.css('padding-bottom'), 10);
      containerLeftPadding = parseInt($container.css('padding-left'), 10);
      newWidth = imageWidth + containerLeftPadding + containerRightPadding;
      newHeight = imageHeight + containerTopPadding + containerBottomPadding;
      if (newWidth !== oldWidth && newHeight !== oldHeight) {
        $outerContainer.animate({
          width: newWidth,
          height: newHeight
        }, this.options.resizeDuration, 'swing');
      } else if (newWidth !== oldWidth) {
        $outerContainer.animate({
          width: newWidth
        }, this.options.resizeDuration, 'swing');
      } else if (newHeight !== oldHeight) {
        $outerContainer.animate({
          height: newHeight
        }, this.options.resizeDuration, 'swing');
      }
      setTimeout(function() {
        $lightbox.find('.lb-dataContainer').width(newWidth);
        $lightbox.find('.lb-prevLink').height(newHeight);
        $lightbox.find('.lb-nextLink').height(newHeight);
        _this.showImage();
      }, this.options.resizeDuration);
    };

    Lightbox.prototype.showImage = function() {
      var $lightbox;
      $lightbox = $('#lightbox');
      $lightbox.find('.lb-loader').hide();
      $lightbox.find('.lb-image').fadeIn('slow');
      this.updateNav();
      this.updateDetails();
      this.preloadNeighboringImages();
      this.enableKeyboardNav();
    };

    Lightbox.prototype.updateNav = function() {
      var $lightbox;
      $lightbox = $('#lightbox');
      $lightbox.find('.lb-nav').show();
      if (this.currentImageIndex > 0) {
        $lightbox.find('.lb-prev').show();
      }
      if (this.currentImageIndex < this.album.length - 1) {
        $lightbox.find('.lb-next').show();
      }
    };

    Lightbox.prototype.updateDetails = function() {
      var $lightbox,
        _this = this;
      $lightbox = $('#lightbox');
      if (typeof this.album[this.currentImageIndex].title !== 'undefined' && this.album[this.currentImageIndex].title !== "") {
        $lightbox.find('.lb-caption').html(this.album[this.currentImageIndex].title).fadeIn('fast');
      }
      if (this.album.length > 1) {
        $lightbox.find('.lb-number').html(this.options.labelImage + ' ' + (this.currentImageIndex + 1) + ' ' + this.options.labelOf + '  ' + this.album.length).fadeIn('fast');
      } else {
        $lightbox.find('.lb-number').hide();
      }
      $lightbox.find('.lb-outerContainer').removeClass('animating');
      $lightbox.find('.lb-dataContainer').fadeIn(this.resizeDuration, function() {
        return _this.sizeOverlay();
      });
    };

    Lightbox.prototype.preloadNeighboringImages = function() {
      var preloadNext, preloadPrev;
      if (this.album.length > this.currentImageIndex + 1) {
        preloadNext = new Image;
        preloadNext.src = this.album[this.currentImageIndex + 1].link;
      }
      if (this.currentImageIndex > 0) {
        preloadPrev = new Image;
        preloadPrev.src = this.album[this.currentImageIndex - 1].link;
      }
    };

    Lightbox.prototype.enableKeyboardNav = function() {
      $(document).on('keyup.keyboard', $.proxy(this.keyboardAction, this));
    };

    Lightbox.prototype.disableKeyboardNav = function() {
      $(document).off('.keyboard');
    };

    Lightbox.prototype.keyboardAction = function(event) {
      var KEYCODE_ESC, KEYCODE_LEFTARROW, KEYCODE_RIGHTARROW, key, keycode;
      KEYCODE_ESC = 27;
      KEYCODE_LEFTARROW = 37;
      KEYCODE_RIGHTARROW = 39;
      keycode = event.keyCode;
      key = String.fromCharCode(keycode).toLowerCase();
      if (keycode === KEYCODE_ESC || key.match(/x|o|c/)) {
        this.end();
      } else if (key === 'p' || keycode === KEYCODE_LEFTARROW) {
        if (this.currentImageIndex !== 0) {
          this.changeImage(this.currentImageIndex - 1);
        }
      } else if (key === 'n' || keycode === KEYCODE_RIGHTARROW) {
        if (this.currentImageIndex !== this.album.length - 1) {
          this.changeImage(this.currentImageIndex + 1);
        }
      }
    };

    Lightbox.prototype.end = function() {
      this.disableKeyboardNav();
      $(window).off("resize", this.sizeOverlay);
      $('#lightbox').fadeOut(this.options.fadeDuration);
      $('#lightboxOverlay').fadeOut(this.options.fadeDuration);
      return $('select, object, embed').css({
        visibility: "visible"
      });
    };

    return Lightbox;

  })();

  $(function() {
    var lightbox, options;
    options = new LightboxOptions;
    return lightbox = new Lightbox(options);
  });

}).call(this);
});
$(document).on("click","a[href^='panels/']",function(event){
	event.preventDefault();
	$hashed.doRefresh = false;
	window.location.hash = window.location.hash+"&"+Math.random(); // to let back button work
	
	$this = $(this);
	$panel = $("#panel");
	$panel.stop().show().fadeIn(300);
	$("#panelLoader").show();
	
	if($("#panel_"+encodeURIComponent($this.attr("href").replace(/./g,"_").replace(/\//g,"_slash-")).replace(/%/g,"_")).length>0){
		$("#panelContent, .preloadedPanel, #panelLoader").hide();
		$("#panel_"+encodeURIComponent($this.attr("href").replace(/./g,"_").replace(/\//g,"_slash-")).replace(/%/g,"_")).show();
		transformLinks();
		$events.sidepanelShow();
	}else{
		$.ajax($this.attr("href")).success(function(newContent,textStatus){	
			$("#panelContent, .preloadedPanel").hide()
			$("#panelLoader").fadeOut(200)
			$("#panelContent").html(newContent).show();
			transformLinks();
			$events.sidepanelShow();
		}).error(function(){hidePanel()});
	}
	
	$("#wrapper").css("display","none"); // hide wrapper to prevent ghost scrolling	
	setTimeout("$hashed.doRefresh = true;",100);
	return false;
});
hidePanel = function(){
	
	history.back();
}
/*Back button hack*/
$.plugin($hashChangeEnd,{
	panels:function(){
		if($hashed.doRefresh && $("#panel").css("display") != "none"){
			$("#wrapper").css("display","block");
			$("#panel").animate({right:-$("#panel").width()-20},500,"easeOutCubic",function(){
				$(this).hide();
			});
			$events.sidepanelHide();
		}
	}
});
/* Plugin JS file */
if($.browser.name=="msie"){	
	$(document).on("mouseenter",".tileFlip",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().fadeOut(500);
	}).on("mouseleave",".tileFlip",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().fadeIn(500);
	})
}else{
	$(document).ready(function(){
		$(".tileFlip").addClass("support3D");
	});
	$(document).on("mouseenter",".tileFlip",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().delay(300).animate({opacity:0},0)
	}).on("mouseleave",".tileFlip",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().animate({opacity:1},0);
	})
	
}
/*flip tile 0.1 */
if($.browser.name=="msie"){	
	$(document).on("mouseenter",".tileFlipText",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().fadeOut(500);
	}).on("mouseleave",".tileFlipText",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().fadeIn(500);
	})
}else{
	$(document).ready(function(){
		$(".tileFlipText").addClass("support3D");
	});
	$(document).on("mouseenter",".tileFlipText",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().delay(300).animate({opacity:0},0)
	}).on("mouseleave",".tileFlipText",function(){
		$(this).find(".flipFront, .tileLabelWrapper").stop().animate({opacity:1},0);
	})	
}
/* Plugin JS file */
$(document).on("mouseenter",".tileSlide",function(){
	if($(this).data("doslide")){
		
		if($(this).hasClass("right")){
			$(this).children('.imageWrapper').stop().animate({"margin-left":$(this).children(".slideText").width()+15},400);
			$(this).children(".slideText").stop().animate({"left":0},400);
		}else if($(this).hasClass("left")){
			$(this).children('.imageWrapper').stop().animate({"margin-left":-$(this).children(".slideText").width()-15},400);
			$(this).children(".slideText").stop().animate({"left":"-="+($(this).children(".slideText").width()+15)},400);
		}else if($(this).hasClass("down")){
			$(this).children('.imageWrapper').stop().animate({"margin-top":$(this).children(".slideText").height()+15},400);
			$(this).children(".slideText").stop().animate({"top":0},400);
		}else if($(this).hasClass("up")){
			$(this).children('.imageWrapper').stop().animate({"margin-top":-$(this).children(".slideText").height()-15},400);
			$(this).children(".slideText").stop().animate({"top":"-="+($(this).children(".slideText").height()+15)},400);
		}
	}else{
		if($(this).hasClass("right")){
			$(this).children('.imageWrapper').stop().animate({"margin-left":$(this).children(".slideText").width()+15},400);
		}else if($(this).hasClass("left")){
			$(this).children('.imageWrapper').stop().animate({"margin-left":-$(this).children(".slideText").width()-15},400);
		}else if($(this).hasClass("down")){
			$(this).children('.imageWrapper').stop().animate({"margin-top":$(this).children(".slideText").height()+15},400);
		}else if($(this).hasClass("up")){
			$(this).children('.imageWrapper').stop().animate({"margin-top":-$(this).children(".slideText").height()-15},400);
		}
	}
	
}).on("mouseleave",".tileSlide",function(){
	$(this).children('.imageWrapper').stop().animate({"margin-left":0, "margin-top":0},400);
	if($(this).data("doslide")){	
		if($(this).hasClass("right")){
			$(this).children(".slideText").stop().animate({"left":-$(this).children(".slideText").width()},400);
		}else if($(this).hasClass("left")){
			$(this).children(".slideText").stop().animate({"left":$(this).width()},400);
		}else if($(this).hasClass("down")){
			$(this).children(".slideText").stop().animate({"top":-$(this).children(".slideText").height()},400);
		}else if($(this).hasClass("up")){
			$(this).children(".slideText").stop().animate({"top":$(this).height()},400);
		}
	}
})
/* Plugin JS file */
if(($.browser.name=="msie" && $.browser.version<11 ) || $.browser.name=="opera"){ // if notIE
	$(document).on("mouseenter",".tileSlideFx",function(){
		$(this).children('.imgWrapper').stop().animate({"margin-left":-$(this).width()*0.4},500);
	}).on("mouseleave",".tileSlideFx",function(){
		$(this).children('.imgWrapper').stop().animate({"margin-left":0},500);
	})
}else{
	$(document).on("mouseenter",".tileSlideFx",function(){
		$(this).addClass("hovered");
		clearTimeout(timers[$(this)]);
	}).on("mouseleave",".tileSlideFx",function(){
		timers[$(this)] = setTimeout(function(){$(".tileSlideFx").removeClass("hovered")},201);
	})
	
}
$.plugin($siteLoad,{
	tileSlideFx:function(){
		if(($.browser.name!="msie" || ($.browser.name=="msie" && $.browser.version>10)) && $.browser.name!="opera"){
			$(".tileSlideFx").each( function() {
          		var $item 	= $( this ),
				    itemwidth = $item.width(),
					img		= $item.find('img').attr( 'src' ),
					struct	= '<div class="slice s1">\
					<div class="slice s2"  style="background-position: -'+itemwidth*0.25+'px 0px;">\
					<div class="slice s3" style="background-position: -'+itemwidth*0.5+'px 0px;">\
					<div class="slice s4" style="background-position:-'+itemwidth*0.75+'px 0px;">\
					</div></div></div></div>';
				$item.children('.imgWrapper').remove().end()
					.append(struct)
					.find('.slice').css("width", itemwidth*0.25).css( 'background-image','url('+img+')')
					.prepend('<span class="overlay" style="width:'+itemwidth*0.25+'px;"></span>')

        	});  
		}else{
			$(".tileSlideFx").css("overflow","hidden");
		}
	}
});
/* Plugin JS file */

/*SLIDESHOW TILE*/
slideshowTiles = [];
nextSlideshow=function(id,imgs,alts,texts,effect,s,dir){
		var $id = $("#"+id);
		if(device == "mobile" ||($page.current=="home" && !scrolling && ($id.hasClass("group"+$group.current) || $id.hasClass("group"+($group.current+1)) || $page.layout == "column"))){
			clearTimeout(timers[id]);
			var n = $id.data("n"); // current image
			if(n<0){n=imgs.length-1};
			if(n+1>imgs.length){n=0}
			if(!dir){
				dir=1;
				n = ((n+2)>imgs.length) ? 0 : n+1;
			}
			$id.data("n",n)
			var fxarr = effect.split(","),
				fx = (fxarr.length>1)?fxarr[Math.floor(Math.random() * fxarr.length)]:fxarr[0] ,
				$wr = $id.children(".imgWrapper"),
				$img = $wr.children("img"),
				$wrBack = $id.children(".imgWrapperBack"),
				$imgText = $id.children(".imgText");
				$imgBack = $wrBack.children("img"),
				imgSrc = $img.attr("src")
				imgAlt = $img.attr("alt")
			switch($.trim(fx)){				
				case "slide-right":
				dir = -dir;
				case "slide-left":
				$imgBack.attr("src",imgSrc)
				$imgBack.attr("alt",imgAlt)
				$wrBack.stop(true,true).css("left",0).css("top",0).animate({left:-dir*$img.width()},1200,"easeOutCubic").show();
				
				$img.attr("src",imgs[n])
				$img.attr("alt",alts[n])
				$wr.stop(true,true).css("left",dir*$img.width()).css("top",0).animate({left:0},1200,"easeOutCubic").show();
				break;
				case "slide-hor-alternate":
				if(typeof $id.data("side") == "undefined" || $id.data("side")==0){ // go ltr
					$imgBack.attr("src",imgSrc)
					$imgBack.attr("alt",imgAlt)
					$wrBack.stop(true,true).css("left",0).css("top",0).animate({left:dir*$id.width()},1200,"easeOutCubic").show();
					$img.attr("src",imgs[n])
					$img.attr("alt",alts[n])

					$wr.stop(true,true).css("left",-dir*$id.width()).css("top",0).animate({left:0},1200,"easeOutCubic").show();
					$id.data("side",1)
				}else{ // go rtl
					$imgBack.attr("src",imgSrc)
					$imgBack.attr("alt",imgAlt)
					$wrBack.stop(true,true).css("left",0).css("top",0).animate({left:-dir*$img.width()},1200,"easeOutCubic").show();
					$img.attr("src",imgs[n]);
					$img.attr("alt",alts[n])
					$wrBack.stop(true,true).css("left",dir*$img.width()).css("top",0).animate({left:0},1200,"easeOutCubic").show();
					$id.data("side",0)
				}
				break;
				case "slide-down":
				dir=-dir;
				case "slide-up":
				$imgBack.attr("src",imgSrc)
				$imgBack.attr("alt",imgAlt)
				$wrBack.stop(true,true).css("top",0).css("left",0).animate({top:-$id.height()*dir},1200,"easeOutCubic").show();
				$img.attr("src",imgs[n])
				$img.attr("alt",alts[n])
				$wr.stop(true,true).css("top",$id.height()*dir).css("left",0).animate({top:0},1200,"easeOutCubic").show();
				break;
				case "slide-ver-alternate":
				if(typeof $id.data("side") == "undefined" || $id.data("side")==0){ // go ltr
					$imgBack.attr("src",imgSrc)
					$wrBack.stop(true,true).css("top",0).css("left",0).animate({top:$id.height()*dir},1200,"easeOutCubic").show();
					$img.attr("src",imgs[n])
					$wr.stop(true,true).css("top",-$id.height()*dir).css("left",0).animate({top:0},1200,"easeOutCubic").show();
					$id.data("side",1)
				}else{ // go rtl
					$imgBack.attr("src",imgSrc)
					$imgBack.attr("alt",imgAlt)
					$wrBack.stop(true,true).css("top",0).css("left",0).animate({top:-$id.height()*dir},1200,"easeOutCubic").show();
					$img.attr("src",imgs[n])
					$img.attr("alt",alts[n])
					$wr.stop(true,true).css("top",$id.height()*dir).css("left",0).animate({top:0},1200,"easeOutCubic").show();
					$id.data("side",0)
				}
				break;
				case "flip-vertical":
				var margin =$id.height()/2;
				var height=$id.height()+2;
				var width=$id.width()+2;
				$imgBack.css({height:'0px',width:''+width+'px',marginTop:''+margin+'px',opacity:'0.5'});
				$img.stop(true,false).animate({height:'0px',width:''+width+'px',marginTop:''+margin+'px',opacity:'0.5'},400,function(){			
					$imgBack.attr("src",imgSrc).attr("alt",imgAlt).animate({height:''+height+'px',width:''+width+'px',marginTop:'0px',opacity:'1'},400);
				});	
				$imgBack.stop(true,false).animate({height:'0px'},400,function(){
					$img.attr("src",imgs[n]).attr("alt",alts[n]).animate({height:''+height+'px',width:''+width+'px',marginTop:'0px',opacity:'1'},400);
				});
				break;
				case "flip-horizontal":
				var margin = $id.width()/2;
				var width = $id.width()+2;
				var height=$id.height()+2;
				$imgBack.css({width:'0px',height:''+height+'px',marginLeft:''+margin+'px',opacity:'0.5'});
				$img.stop(true,false).animate({width:'0px',height:''+height+'px',marginLeft:''+margin+'px'},400,function(){
					$imgBack.attr("src",imgSrc).attr("alt",imgAlt).animate({width:''+width+'px',height:''+height+'px',marginLeft:'0px'},400);
				});
				$imgBack.stop(true,false).animate({width:'0px',height:''+height+'px',marginLeft:''+margin+'px'},400,function(){
					$img.attr("src",imgs[n]).attr("alt",alts[n]).animate({width:''+width+'px',height:''+height+'px',marginLeft:'0px'},400);
				});	
				break;
				default:
				case "fade":

				$imgBack.attr("src",imgSrc)
				$imgBack.attr("alt",imgAlt)
				$wrBack.stop(true,true).show().fadeOut(700)
				$img.attr("src",imgs[n])
				$img.attr("alt",alts[n])
				$wr.stop(true,true).hide().fadeIn(700);
				
				break;
			}
			if(texts != "" && texts.length>0){
				$imgText.fadeOut(600,function(){
					if(texts.length>n){
						$imgText.html(texts[n]);
					}else{
						$imgText.html("");
					}					
					$imgText.fadeIn(600);
				});		
			}
		}
		if(s!=0){
			timers[id] = setTimeout(function(){nextSlideshow(id,imgs,alts,texts,effect,s)},s);
		}
	}
$.plugin($siteLoad,{	
	slideShowInit:function(){
		for(var i in slideshowTiles){
			
			nextSlideshow(i,slideshowTiles[i][0],slideshowTiles[i][1],slideshowTiles[i][2],slideshowTiles[i][3],slideshowTiles[i][4]);
			for(var j in slideshowTiles[i][0]){
					var image = $('<img />').attr('src', slideshowTiles[i][0][j]);
			}
		}
		$(".tileSlideshow").on("mouseover","#sl_arrowLeft, #sl_arrowRight",function(){
			$(this).stop().fadeTo(200,1);
		}).on("mouseout","#sl_arrowLeft, #sl_arrowRight",function(){
			$(this).stop().fadeTo(200,0.4);
		}).on("click","#sl_arrowLeft",function(event){
			event.stopPropagation();
			$id = $(this).parent(".tileSlideshow");
			id = $id.attr("id")
			$id.data("n",($id.data("n")-1));
			nextSlideshow(id,slideshowTiles[id][0],slideshowTiles[i][1],slideshowTiles[id][2],slideshowTiles[id][3],slideshowTiles[i][4],-1);
			return false;
		}).on("click","#sl_arrowRight",function(event){	
			event.stopPropagation();
			$id = $(this).parent(".tileSlideshow");
			id = $id.attr("id")
			$id.data("n",($id.data("n")+1));
			nextSlideshow(id,slideshowTiles[id][0],slideshowTiles[id][1],slideshowTiles[id][2],slideshowTiles[i][3],slideshowTiles[i][4],1);
			return false;
		});
	}
});
/* Plugin JS file */
/* METRO UI TEMPLATE 
/* Copyright 2012 Thomas Verelst, http://metro-webdesign.info*/


/*Functions that will be used everywhere, mainly in main.js */

scrolling = false;
scaleSpacing = scale+spacing;

$page.current = "";
$page.layout = "full";

$group.count = $group.titles.length;
$group.current = -1;

mostRight = 0;
mostDown = 0;
tileContainer = "";

$hashed.parts = [];
$hashed.doRefresh = true;

submenu = [];

$group.spacing = $group.spacingFull.slice(); // clone arrays

/*Replace spaces by hyphens. ( - )  for TEXT to URL*/
String.prototype.stripSpaces = function(){ return this.replace(/\s/g,"-")}
/*Replace hyphens by spaces, for URL to TEXT */
String.prototype.addSpaces = function(){ return this.replace(/-/g," ")}
/*Case insensitive array search and returns the index of that search in the array */
inArrayNCindex = function(val,array){var i=array.length;val=chars(val.toLowerCase());while (i--){if(chars(array[i].toLowerCase())==val){return i;}}return -1;}
inArrayNCkey = function(val,array){val=chars(val.toLowerCase());for(var key in array){if(chars(array[key].toLowerCase())==val){return key;}}return -1;}
/* Returns the case sensitive index after a case insensitive index search */
strRepeat = function(cnt,char){var a = [],x = cnt + 1;while (x--) { a[x] = '';}return a.join(char);}

/*PHP strtr equivalent*/
chars = function(r){
	r = r.replace(new RegExp("[àáâãäåæąĄ]", 'g'),"a");
	r = r.replace(new RegExp("[çćĆ]", 'g'),"c");
	r = r.replace(new RegExp("[èéêëęĘ]", 'g'),"e");
	r = r.replace(new RegExp("[ìíîï]", 'g'),"i");
	r = r.replace(new RegExp("[ñńŃ]", 'g'),"n");     
	r = r.replace(new RegExp("[òóôõöðøóÓ]", 'g'),"o");
	r = r.replace(new RegExp("[œ]", 'g'),"oe");
	r = r.replace(new RegExp("[ùúûü]", 'g'),"u");
	r = r.replace(new RegExp("[ýÿ]", 'g'),"y");
	r = r.replace(new RegExp("[šśŚ]", 'g'),"s");
	r = r.replace(new RegExp("[žżŻźŹ]", 'g'),"z");
	r = r.replace(new RegExp("[Þ]", 'g'),"b");
	r = r.replace(new RegExp("[ß]", 'g'),"ss");
	r = r.replace(new RegExp("[ƒ]", 'g'),"f");
	r = r.replace(new RegExp("[łŁ]", 'g'),"l");
	return r;
};

/* Init the tile-pages move functions */
$.extend($group, {	
	goTo: function(n){
		if($page.current != "home"){
			window.location.hash = "&"+$group.titles[n].toLowerCase().stripSpaces();
			$show.prepareTiles();
		}
		
		$tileContainer = $("#tileContainer");
		scrolling = true;
		if(n<0){n=0};
		$group.current = n;	
		$("html, body").animate({"scrollTop":$("#groupTitle"+n).offset().top},scrollSpeed,function(){
			document.title = siteTitle+" | "+$group.titles[$group.current];
			window.location.hash = "&"+$group.titles[$group.current].toLowerCase().stripSpaces();
			setTimeout("scrolling = false",100);
			$events.tileGroupChangeEnd();	
		});	
	
		$mainNav.setActive();
		$events.tileGroupChangeBegin();	
	}
});

/* Set width so we can scroll to last tilegroup */
fixScrolling = function(){
	$("#tileContainer").height(mostDown+100);
}

recalcScrolling = function(){
	mostDown = 0;
	$("#tileContainer").children(".tile").each(function(){
		var thisDown= parseInt($(this).css("margin-top"))+$(this).height();
		if(thisDown>mostDown){
			mostDown=thisDown;
		}		
	})
	$events.recalcScrolling();
}

/* To create subnav */
$subNav={
	make: function(){/* Generates the subnav- menu, makes sub-Navigation items */
		$("#subNav").children("a").each(function(){
			$(this).attr("href",$(this).attr("href").replace("?p=","#!/"));
		});	
		$subNav.setActive();
		$events.subNavMake();
	},
	/* highlights current sub-navigation-item */
	setActive: function(){
		var $nav = $("#subNav");
		$nav.children("a").removeClass("subNavItemActive");
		$nav.children('[href$="'+$hashed.parts[0]+'"]').addClass("subNavItemActive");
		$events.subNavActive();
	}
}

/* Makes main (top) nav */
$mainNav={
	init: function(){
		$("nav").on("click","a",function(){
			if(typeof $(this).attr("rel")!=="undefined"){
				$group.goTo(parseInt($(this).attr("rel").replace("group","")));
			}
			if(typeof $(this).attr("id")!=="undefined"){
                 $group.goTo(parseInt($(this).attr("id").replace("group","")));
            }
		});
		$events.mainNavInit();
	},
	setActive: function(){
		var $nav = $("nav")
		$nav.children("a").removeClass("navActive");
		$nav.children("[rel='group"+$group.current+"']").addClass("navActive");
		$nav.children("#group"+$group.current).addClass("navActive");
		$events.mainNavActive();
	},
	set:function(w){/* Used to manually select the highlighted menu */
		var $nav = $("nav")
		w = $.trim(w.toLowerCase());
		$nav.children("a").removeClass("navActive");
		$nav.children("a").each(function(){
			if($.trim($(this).text().toLowerCase()) == w.toLowerCase()){
				$(this).addClass("navActive");
			}
		});
		$events.mainNavSet();
	}
}

/*For smaller column mainnav */
$(document).on("click","#navTitle",function(){
	if($("#nav>a").css("display") == "none"){
		$("#nav>a").css("display","block");
	}else{
		$("#nav>a").css("display","none");
	}
});

/* Creates a nice link according to the required page */
makeLink = function(lp){/* To make valid links */
	lp = lp.toLowerCase();
	if(lp.substr(0,9) == 'external:' || lp.substr(0,9) == 'gotolink:'){
		return lp.substr(9);
	}
	if(lp==""){
		return '';
	}
	if(lp.substr(0,7) == "http://" ||
	   lp.substr(0,8) == "https://" ||
	   lp.substr(0,1) == "/" ||
	   lp.substr(0,1) == "#" ||
	   lp[lp.length-1] == "/")
	{
		return lp;
	}
	$events.makeLink();
	if(typeof pageTitles[lp] == "undefined" ){
		return "#!/url="+chars(lp.toLowerCase().stripSpaces());
	}else{
		return "#!/"+chars(pageTitles[lp].toLowerCase().stripSpaces());			
	}
}
/* For menu / tile links, generates the link + href + target attribute if needed */
makeLinkHref = function(lp){/* To make valid links */
	var t = '';
	if(lp.substr(0,9) == 'external:'){
		t=" target='_blank' ";
		lp = lp.substr(9);
	}
	$events.makeLinkHref();
	if(lp == ""){
		return "";
	}
	return t+" href='"+makeLink(lp)+"' ";	
}

/* Will be called on page load to transform urls to nice urls */
transformLinks = function(){
	$("a[rel=metro-link]").each(function(){
		$(this).attr("href",$(this).attr("href").replace("?p=","#!/"));
	});
	$events.transformLinks();
}

/*Fired when clicked on any link*/
$(document).on("click","a",function(){	
	if(this.href==window.location.href){ // if we're already on the page the user wants to go
		$(window).hashchange(); // just refresh page
	};
});

function setCookie(c_name,value,exdays){
	var exdate=new Date();
	exdate.setDate(exdate.getDate() + exdays);
	var c_value=escape(value) + ((exdays==null) ? "" : "; expires="+exdate.toUTCString());
	document.cookie=c_name + "=" + c_value;
}
goToFull = function(){
	if(confirm("You will go to the full site")){
		setCookie("fullsite",1,999);
		window.location.href="index.php";
	}
	return false;
};
/* METRO UI TEMPLATE mobile
/* Copyright 2012 Thomas Verelst, http://metro-webdesign.info*/

/*This file does the basic things for the template like loading pages and uses functinos of functions.js*/

$show = {
	prepareTiles: function(){ /* Prepare for showing the tilepage */
		$events.onTilesPrepare();
		$("#subNav").fadeOut(hideSpeed);
		$("#centerWrapper").fadeOut(hideSpeed,function(){
			$show.tiles();
		}); 
		
	},
	tiles: function(){ /* Show homepage */
		$tileContainer = $("#tileContainer")	
		$allTiles = $tileContainer.children(".tile");
		$tileContainer.show().children().hide();
		$("#centerWrapper").show();
		$("#contentWrapper").hide();
		document.title = siteTitle+" - "+siteTitleHome;
		
		if($hashed.parts.length==1 || ($group.current = inArrayNCindex($hashed.parts[1].addSpaces(),$group.titles)) == -1){$group.current = 0;}

		$page.current = "home";
		$tileContainer.addClass("loading")
		$events.beforeTilesShow();
		
		if($group.showEffect==0){	
			$allTiles.each(function(index) {
				var $this = $(this)
				if($this.hasClass("group0")){
					$this.delay(50*index).show(300);
				}else{
					$this.delay(50*index).fadeIn(300);
				}		
			});
		}else if($group.showEffect==1){
			$allTiles.fadeIn(700);
		}else if($group.showEffect==2){
			$allTiles.show(700);
		}
		$tileContainer.children(".groupTitle").fadeIn(700);
		
		setTimeout(function(){
			
			$tileContainer.removeClass("loading")
		 	$(window).resize(); // check the scrollbars now, same as ^
			$events.afterTilesShow();
		},701);
		
		$mainNav.setActive();
		if($group.current > 1){
			$("html, body").animate({scrollTop:$("#groupTitle"+$group.current).offset().top},1000);
		}
		$(window).resize();
	},
	page:function(){ /* show a page with content */
		$("#adminEditButton").attr("href","admin/page-editor.php?p="+$hashed.parts[0]);
		$content = $("#content")
		$("#tileContainer").hide();
		$("#centerWrapper").show();
		$("#contentWrapper").fadeIn(700);
		$content.html("<img src='themes/"+theme+"/img/primary/loader.gif' height='24' width='24'/>");
		$group.current = -1;
		$page.current = "loading";
		
		var title;
		if($hashed.parts[0].substr(0,4) == "url="){ // if the template already noticed the link was not in pageTitles array when generating the url
			title = $hashed.parts[0].substr(4).split(".")[0].addSpaces();
			url = $hashed.parts[0].substr(4);
		}else{ // url is OK
			var hashReq = $hashed.parts[0].addSpaces();
			var i = inArrayNCkey(hashReq,pageURL); // find the corresponding array entry with title
			if(i!=-1){ // found!
				title = pageTitles[i];
				url = i;
			}else{ // not found! let's do a wild guess of the url!
				title = hashReq.split(".")[0];
				url = hashReq+".php";
			}
		}
		submenu = [];
		
		$.ajax("pages/"+url+(typeof $hashed.get[1] != "undefined" ? "?"+$hashed.get[1] : "")).success(function(newContent,textStatus){	
			$content.fadeOut(50,function(){	
				$content.html(newContent);
				$page.current = url;
				transformLinks();
				$subNav.make();
				$events.beforeSubPageShow();
				$content.show(500,function(){
					$events.afterSubPageShow();
					$(window).resize();
				});
				if (typeof _gaq !== "undefined" && _gaq !== null) {_gaq.push(['_trackPageview', "/#!/"+$hashed.parts[0]]); }
			});
		}).error(function(){
			title = l_pageNotFound;
			$content.html(l_pageNotFoundDesc).show(400);
			document.title = title+" | "+siteTitle;
			$subNav.setActive();
		})
		
		document.title = title+" | "+siteTitle;
		$(window).resize();
	}
}

$(window).hashchange(function(){
	$hashed.get = chars(decodeURI(window.location.hash).replace("#!/","").replace("!/","").replace("#!","").replace("#","")).split("?");
	$hashed.parts = $hashed.get[0].split("&"); 
	$events.hashChangeBegin();
	if($hashed.doRefresh){
		if($hashed.parts[0] == ""){ // homepage with tiles
			if($group.current == -1){ // no tiles shown
				if($page.current == ""){
					$show.tiles();
				}else{
					$show.prepareTiles();
				}
			}else{ // it must have been a tilegroup switch
				if($hashed.parts.length>1){
				}else if($group.current == 0){//we refresh the page
					$show.prepareTiles();
				}else{
					$group.goTo(0);
				}		
			}
		}else{ // page with content
			if($page.current == "home"){ // homepage with tiles
				$("#centerWrapper").fadeOut(hideSpeed,function(){
					$show.page();
				});
			}else if($page.current != ""){ // other content page
				$("#content").hide(hideSpeed,function(){
					$show.page();
				});
			}else{ // nothing loaded yet
				$show.page();
			}
		}
	}
	$events.hashChangeEnd();
});


$(window).resize(function(){
	$events.windowResizeBegin();
});

window.onload=function(){
	$tileContainer  = $("#tileContainer");
	
	$events.siteLoad();
		
	/* for fixing dimension issues */
	for(i=0;i<$group.count;i++){
		$tileContainer.children(".group"+i).each(function(){
			var thisDown= parseInt($(this).css("margin-top"))+$(this).height();
			if(thisDown>mostDown){
				mostDown=thisDown;
			}
			/* For nice urls with nice transitions */
			if(typeof $(this).attr("href") != "undefined"){
				$(this).attr("href",$(this).attr("href").replace("?p=","#!/"));
			}		
		})				
	}	
	tileContainer = $("#tileContainer").html();
	
	/*For good scrolling */
	fixScrolling();
	
	/* make links for mainnav for navigation */
	$mainNav.init();
	
	/*Start page rendering */
	setTimeout(function(){
		$(window).hashchange();
	},20);

	/*For main nav*/
	$("#navTitle").click(function(){
		if($("#navItems").css("display") == "none"){
			$("#navItems").css("display","block");
			setTimeout(function(){
				$(document).bind("click.closeNav",function(){
					$("#navItems").css("display","none");
					$(document).unbind("click.closeNav");	
				})
			},1);
		}else{
			$("#navItems").css("display","none");
		}
	});
	
	/*Go to full site */
	$("#tileContainer, footer").on("click",".goToFull",function(){
		if(confirm(l_goToFullSiteRedirect)){
			setCookie("fullsite",1,999);
			window.location.href="index.php";
		}
		return false;
	});
	
	$(window).resize();
};


